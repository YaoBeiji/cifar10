{"env_info": "sys.platform: win32\nPython: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3080 Ti Laptop GPU\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.3\nNVCC: Cuda compilation tools, release 11.3, V11.3.58\nMSVC: \u7528\u4e8e x64 \u7684 Microsoft (R) C/C++ \u4f18\u5316\u7f16\u8bd1\u5668 19.29.30147 \u7248\nGCC: n/a\nPyTorch: 1.10.0+cu113\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 2019\n  - LAPACK is enabled (usually provided by MKL)\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.2\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=C:/w/b/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/w/b/windows/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, \n\nTorchVision: 0.11.0+cu113\nOpenCV: 4.6.0\nMMCV: 1.6.0\nMMCV Compiler: MSVC 192930145\nMMCV CUDA Compiler: 11.3\nMMClassification: 0.25.0+3d4f80d", "seed": 1176980400, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(type='MobileNetV3', arch='small'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='StackedLinearClsHead',\n        num_classes=10,\n        in_channels=576,\n        mid_channels=[1280],\n        act_cfg=dict(type='HSwish'),\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, 5)))\ndataset_type = 'CIFAR10'\nimg_norm_cfg = dict(\n    mean=[125.307, 122.961, 113.8575],\n    std=[51.5865, 50.847, 51.255],\n    to_rgb=False)\ntrain_pipeline = [\n    dict(type='RandomCrop', size=32, padding=4),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=2,\n    train=dict(\n        type='CIFAR10',\n        data_prefix='D:\\workspace\\flower_data\\CIFAR-10\\cifar10',\n        pipeline=[\n            dict(type='RandomCrop', size=32, padding=4),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CIFAR10',\n        data_prefix='D:\\workspace\\flower_data\\CIFAR-10\\cifar10',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True),\n    test=dict(\n        type='CIFAR10',\n        data_prefix='D:\\workspace\\flower_data\\CIFAR-10\\cifar10',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True))\noptimizer = dict(type='SGD', lr=0.001, momentum=0.8, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[1])\nrunner = dict(type='EpochBasedRunner', max_epochs=150)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'D:\\workspace\\mmclassification\\tools\\work_dirs\\mobilenet-v3_cifar10\\epoch_51.pth'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs\\mobilenet-v3_cifar10'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 1176980400\n", "CLASSES": ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"], "hook_msgs": {"last_ckpt": "D:\\workspace\\mmclassification\\tools\\work_dirs\\mobilenet-v3_cifar10\\epoch_15.pth"}, "epoch": 16, "iter": 25008, "mmcv_version": "1.6.0", "time": "Sun Feb  5 21:58:05 2023"}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.07896, "loss": 1.19325, "time": 0.13331}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.23119, "time": 0.0208}
{"mode": "train", "epoch": 17, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00014, "loss": 1.19255, "time": 0.02075}
{"mode": "train", "epoch": 17, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00013, "loss": 1.19378, "time": 0.02086}
{"mode": "train", "epoch": 17, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.22147, "time": 0.02057}
{"mode": "train", "epoch": 17, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00022, "loss": 1.22848, "time": 0.02056}
{"mode": "train", "epoch": 17, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.17883, "time": 0.02019}
{"mode": "val", "epoch": 17, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.24, "accuracy_top-5": 95.57}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02024, "loss": 1.20088, "time": 0.04257}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.21576, "time": 0.02093}
{"mode": "train", "epoch": 18, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20124, "time": 0.02067}
{"mode": "train", "epoch": 18, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00016, "loss": 1.19084, "time": 0.02006}
{"mode": "train", "epoch": 18, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.21869, "time": 0.02074}
{"mode": "train", "epoch": 18, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.19074, "time": 0.02152}
{"mode": "train", "epoch": 18, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00014, "loss": 1.19257, "time": 0.02153}
{"mode": "val", "epoch": 18, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.22, "accuracy_top-5": 95.56}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02028, "loss": 1.19191, "time": 0.04189}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 8e-05, "loss": 1.1995, "time": 0.02047}
{"mode": "train", "epoch": 19, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20517, "time": 0.02115}
{"mode": "train", "epoch": 19, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.20736, "time": 0.02146}
{"mode": "train", "epoch": 19, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 7e-05, "loss": 1.19375, "time": 0.02107}
{"mode": "train", "epoch": 19, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20831, "time": 0.02205}
{"mode": "train", "epoch": 19, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.22036, "time": 0.02379}
{"mode": "val", "epoch": 19, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.22, "accuracy_top-5": 95.53}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02035, "loss": 1.21806, "time": 0.04386}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.21094, "time": 0.0231}
{"mode": "train", "epoch": 20, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.18885, "time": 0.02212}
{"mode": "train", "epoch": 20, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.0001, "loss": 1.22084, "time": 0.02161}
{"mode": "train", "epoch": 20, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00013, "loss": 1.19661, "time": 0.0214}
{"mode": "train", "epoch": 20, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00014, "loss": 1.19431, "time": 0.02284}
{"mode": "train", "epoch": 20, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.18566, "time": 0.02299}
{"mode": "val", "epoch": 20, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.2, "accuracy_top-5": 95.54}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02024, "loss": 1.20157, "time": 0.04483}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 8e-05, "loss": 1.20802, "time": 0.02362}
{"mode": "train", "epoch": 21, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00016, "loss": 1.20757, "time": 0.02487}
{"mode": "train", "epoch": 21, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20912, "time": 0.02458}
{"mode": "train", "epoch": 21, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00022, "loss": 1.2236, "time": 0.02384}
{"mode": "train", "epoch": 21, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.20501, "time": 0.02282}
{"mode": "train", "epoch": 21, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00016, "loss": 1.19844, "time": 0.02441}
{"mode": "val", "epoch": 21, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.39, "accuracy_top-5": 95.50999}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02032, "loss": 1.21319, "time": 0.04473}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.21083, "time": 0.02282}
{"mode": "train", "epoch": 22, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.22783, "time": 0.02193}
{"mode": "train", "epoch": 22, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.20674, "time": 0.02376}
{"mode": "train", "epoch": 22, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.19813, "time": 0.02364}
{"mode": "train", "epoch": 22, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 8e-05, "loss": 1.18914, "time": 0.02398}
{"mode": "train", "epoch": 22, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00018, "loss": 1.20881, "time": 0.02334}
{"mode": "val", "epoch": 22, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.3, "accuracy_top-5": 95.55}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02034, "loss": 1.21138, "time": 0.04436}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.1979, "time": 0.02326}
{"mode": "train", "epoch": 23, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.20578, "time": 0.02308}
{"mode": "train", "epoch": 23, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00013, "loss": 1.19586, "time": 0.02281}
{"mode": "train", "epoch": 23, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 4e-05, "loss": 1.21917, "time": 0.02341}
{"mode": "train", "epoch": 23, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.21578, "time": 0.02332}
{"mode": "train", "epoch": 23, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20932, "time": 0.02355}
{"mode": "val", "epoch": 23, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.33, "accuracy_top-5": 95.52}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02034, "loss": 1.20172, "time": 0.04178}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.22255, "time": 0.021}
{"mode": "train", "epoch": 24, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00015, "loss": 1.19903, "time": 0.02211}
{"mode": "train", "epoch": 24, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.18376, "time": 0.02312}
{"mode": "train", "epoch": 24, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00016, "loss": 1.19741, "time": 0.02365}
{"mode": "train", "epoch": 24, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.20362, "time": 0.02181}
{"mode": "train", "epoch": 24, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.19581, "time": 0.0211}
{"mode": "val", "epoch": 24, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.2, "accuracy_top-5": 95.53}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02026, "loss": 1.2001, "time": 0.04276}
{"mode": "train", "epoch": 25, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.20515, "time": 0.02201}
{"mode": "train", "epoch": 25, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 7e-05, "loss": 1.19771, "time": 0.02237}
{"mode": "train", "epoch": 25, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00016, "loss": 1.19527, "time": 0.02176}
{"mode": "train", "epoch": 25, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00017, "loss": 1.20423, "time": 0.02181}
{"mode": "train", "epoch": 25, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 8e-05, "loss": 1.20671, "time": 0.02214}
{"mode": "train", "epoch": 25, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.00014, "loss": 1.20474, "time": 0.02194}
{"mode": "val", "epoch": 25, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.28, "accuracy_top-5": 95.50999}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02031, "loss": 1.22229, "time": 0.04129}
{"mode": "train", "epoch": 26, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 6e-05, "loss": 1.19017, "time": 0.02072}
{"mode": "train", "epoch": 26, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.20987, "time": 0.02204}
{"mode": "train", "epoch": 26, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.21602, "time": 0.02071}
{"mode": "train", "epoch": 26, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 8e-05, "loss": 1.18941, "time": 0.02099}
{"mode": "train", "epoch": 26, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00011, "loss": 1.19441, "time": 0.02063}
{"mode": "train", "epoch": 26, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 0.0001, "loss": 1.19588, "time": 0.02014}
{"mode": "val", "epoch": 26, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.38, "accuracy_top-5": 95.52}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 0.0001, "memory": 45, "data_time": 0.02025, "loss": 1.19903, "time": 0.04217}
{"mode": "train", "epoch": 27, "iter": 200, "lr": 0.0001, "memory": 45, "data_time": 0.00013, "loss": 1.2076, "time": 0.02209}
{"mode": "train", "epoch": 27, "iter": 300, "lr": 0.0001, "memory": 45, "data_time": 0.00014, "loss": 1.2062, "time": 0.02133}
{"mode": "train", "epoch": 27, "iter": 400, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.19945, "time": 0.02088}
{"mode": "train", "epoch": 27, "iter": 500, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.18094, "time": 0.02115}
{"mode": "train", "epoch": 27, "iter": 600, "lr": 0.0001, "memory": 45, "data_time": 0.00012, "loss": 1.2034, "time": 0.02155}
{"mode": "train", "epoch": 27, "iter": 700, "lr": 0.0001, "memory": 45, "data_time": 9e-05, "loss": 1.22074, "time": 0.02184}
{"mode": "val", "epoch": 27, "iter": 157, "lr": 0.0001, "accuracy_top-1": 59.34, "accuracy_top-5": 95.5}
